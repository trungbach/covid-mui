[{"C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\index.js":"1","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\App.js":"2","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\reportWebVitals.js":"3","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\InfoBox.js":"4","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\Table.js":"5","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\LineGraph.js":"6","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\util.js":"7","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\Map.js":"8"},{"size":535,"mtime":1607577998935,"results":"9","hashOfConfig":"10"},{"size":3888,"mtime":1607592296784,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607417822856,"results":"12","hashOfConfig":"10"},{"size":953,"mtime":1607591560227,"results":"13","hashOfConfig":"10"},{"size":574,"mtime":1607588660109,"results":"14","hashOfConfig":"10"},{"size":2703,"mtime":1607592330538,"results":"15","hashOfConfig":"10"},{"size":2109,"mtime":1607590015793,"results":"16","hashOfConfig":"10"},{"size":1316,"mtime":1607593166413,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1im27ce",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\index.js",[],["41","42"],"C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\App.js",["43"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent, Grid } from '@material-ui/core';\n// import CountUp from 'react-countup'; \nimport InfoBox from './InfoBox';\nimport LineGraph from './LineGraph';\nimport Table from './Table';\nimport Map from './Map';\nimport {prettyPrintStat} from './util';\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] =  useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapZoom, setMapZoom] = useState(2);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n        await fetch('http://disease.sh/v3/covid-19/countries')\n          .then(response => response.json())\n          .then(data => {\n            const countries = data.map(country => ({\n              name: country.country,\n              value:  country.countryInfo.iso2\n            }));\n\n            setMapCountries(data);\n            setTableData(data);\n            setCountries(countries);\n          })\n        await fetch('http://disease.sh/v3/covid-19/all')\n        .then(response => response.json())\n        .then(data => {\n          setCountryInfo(data);\n        })\n    }  \n    getCountriesData(); \n  }, []);\n\n  const onChangeCountry = async (e) => {\n     const country = e.target.value;\n     const url = country === 'worldwide' ? 'http://disease.sh/v3/covid-19/all' : `http://disease.sh/v3/covid-19/countries/${country}`;\n    \n     await fetch(url)\n     .then(response => response.json()) \n     .then(data => {\n        setCountry(country);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(6);\n     })\n  }\n\n  return (\n    <div className=\"app\">\n      <div className='app__left'>\n        <div className='app__header'>\n          <h1>COVID19-TRACKER</h1>\n          <FormControl className='app__dropdown'>\n            <Select variant='outlined' value={country} onChange={onChangeCountry}>\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\n              {countries.map(country => <MenuItem value={country.value}>{country.name}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className='app_stats'>\n          <InfoBox title='Coronavirus cases' \n            isRed\n            active={casesType === 'cases'}\n            casesType={casesType}\n            onClick={(e) => setCasesType('cases')}\n            cases={prettyPrintStat(countryInfo.todayCases)} \n            total={prettyPrintStat(countryInfo.cases)} />\n          <InfoBox title='Recovered' \n            active={casesType === 'recovered'}\n            onClick={(e) => setCasesType('recovered')}\n            cases={prettyPrintStat(countryInfo.todayRecovered)} \n            total={prettyPrintStat(countryInfo.recovered)} />\n          <InfoBox title='Deaths' \n            isRed\n            active={casesType === 'deaths'}\n            onClick={(e) => setCasesType('deaths')}\n            cases={prettyPrintStat(countryInfo.todayDeaths)} \n            total={prettyPrintStat(countryInfo.deaths)} />\n        </div>\n\n        <Map\n            countries={mapCountries}\n            casesType={casesType}\n            center={mapCenter}\n            zoom={mapZoom}\n        />\n      </div>\n      <Card className='app__right'>\n        <CardContent>\n           <h3>Live Cases by Country</h3>\n           <Table countries={tableData}/>\n           <h3>Worldwide new {casesType}</h3>\n           <LineGraph className='app_graph' casesType={casesType}/>\n        </CardContent>\n      </Card>\n    </div>\n\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\reportWebVitals.js",[],"C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\InfoBox.js",["44"],"import React from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\nimport './InfoBox.css';\r\nimport CountUp from 'react-countup';\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\r\n    return (\r\n        <Card className= {`infoBox ${active ? 'info--selected' : ''} ${isRed && active ? 'info--red' : ''}`} onClick={props.onClick}>\r\n            <CardContent>\r\n                <Typography color='textSecondary' className='infoBox__title'>\r\n                    {title}\r\n                </Typography>\r\n\r\n                <Typography >\r\n                    <h2 className={`infoBox__cases ${!isRed ? 'infoBox__cases--green' : ''} `}>Today: {cases}</h2>\r\n                </Typography>\r\n\r\n                <Typography color='textSecondary' className='infoBox__total'>\r\n                   Total: {total}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox;","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\Table.js",[],"C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\LineGraph.js",["45"],"import React, { useState, useEffect } from 'react';\r\nimport {Bar, Line} from 'react-chartjs-2';\r\nimport './LineGraph.css';\r\nimport numeral from 'numeral';\r\n\r\nconst options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  \r\n  const buildChartData = (data, casesType) => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n  };\r\n\r\nfunction LineGraph({ casesType, ...props }) {\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    let chartData = buildChartData(data, casesType);\r\n                    setData(chartData);\r\n                })\r\n        }\r\n        fetchData();\r\n    }, [casesType]);\r\n    \r\n    return (\r\n        <div className={props.className}> \r\n            {data?.length > 0 && (\r\n                 <Line \r\n                    options={options}\r\n                    // height={600}\r\n                    // width={300}\r\n                    data={{\r\n                        datasets: [\r\n                            {\r\n                                backgroundColor: \"rgba(204, 16, 52, 0.4)\",\r\n                                borderColor: \"#CC1034\",\r\n                                data: data\r\n                            },\r\n                        ],\r\n                    }}\r\n                />\r\n            )}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph \r\n","C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\util.js",["46"],"import numeral from 'numeral';\r\nimport React from 'react';\r\nimport { Circle, Popup,CircleMarker } from 'react-leaflet';\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n        hex: \"#CC1034\",\r\n        rgb: \"rgb(204, 16, 52)\",\r\n        half_op: \"rgba(204, 16, 52, 0.5)\",\r\n        multiplier: 800,\r\n      },\r\n      recovered: {\r\n        hex: \"#7dd71d\",\r\n        rgb: \"rgb(125, 215, 29)\",\r\n        half_op: \"rgba(125, 215, 29, 0.5)\",\r\n        multiplier: 1200,   \r\n      },\r\n      deaths: {\r\n        hex: \"#fb4443\",\r\n        rgb: \"rgb(251, 68, 67)\",\r\n        half_op: \"rgba(251, 68, 67, 0.5)\",\r\n        multiplier: 2000,\r\n      },\r\n    \r\n};\r\n\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData  = [...data];\r\n\r\n    sortedData.sort((a,b) => {\r\n        if(a.cases > b.cases) return -1;\r\n        else return 1;\r\n    });\r\n    return sortedData; \r\n}\r\n// Draw circle  on the map with interactive tooltip\r\nexport const showDataOnMap = (data, casesType) => \r\n     data.map((country) => (\r\n        <Circle \r\n            center={[country.countryInfo.lat, country.countryInfo.long]}\r\n            fillOpacity={0.4}\r\n            color={casesTypeColors[casesType].hex}\r\n            fillColor={casesTypeColors[casesType].hex}\r\n            radius={\r\n                 Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n            }\r\n        >\r\n            <Popup>\r\n                <div className='info-container'>\r\n                    <div className='info-flag' style={{backgroundImage: `url(${country.countryInfo.flag})` }}></div>\r\n                    <div className='info-name'>{country.country}</div>\r\n                    <div className='info-confirmed'>Cases:{numeral(country.cases).format(\"0,0\")}</div>\r\n                    <div className='info-recovered'>Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\r\n                    <div className='info-deaths'>Deaths:{numeral(country.deaths).format(\"0,0\")}</div>\r\n                </div>\r\n            </Popup>\r\n\r\n        </Circle> \r\n    ));\r\n\r\n\r\nexport const prettyPrintStat = (stat) => \r\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";",["47","48"],"C:\\Users\\THINKPAD T460s\\Downloads\\Trung bach\\ReactJS\\covid-tracker-react-hook-mui\\src\\Map.js",["49","50","51","52"],"import React from 'react';\r\nimport './Map.css';\r\nimport { MapContainer, TileLayer, Marker, Popup,Map as LeafletMap,Circle, CircleMarker } from 'react-leaflet';\r\nimport { showDataOnMap } from './util';\r\nimport L from 'leaflet';\r\nimport marker from './img/marker.png';\r\nimport leafShadow from './img/leaf-shadow.png';\r\n\r\nconst iconPerson = new L.Icon({\r\n    iconUrl: marker,\r\n    iconSize: new L.Point(30, 40),\r\n    className: 'leaflet-div-icon',\r\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\r\n    popupAnchor:  [-3, -76]\r\n});\r\n\r\nfunction Map({countries, casesType, center, zoom}) {\r\n    return (\r\n        <div className='map'>\r\n            <MapContainer center={center} zoom={zoom}  className=\"markercluster-map\">\r\n                <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <Marker position={center} icon={iconPerson}>\r\n                    <Popup>\r\n                        {center}\r\n                    </Popup>\r\n                </Marker>\r\n                {showDataOnMap(countries, casesType)}\r\n            </MapContainer>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":60,"nodeType":"59","messageId":"60","endLine":3,"endColumn":64},{"ruleId":"57","severity":1,"message":"61","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":15},{"ruleId":"57","severity":1,"message":"62","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"63","line":3,"column":24,"nodeType":"59","messageId":"60","endLine":3,"endColumn":36},{"ruleId":"53","replacedBy":"64"},{"ruleId":"55","replacedBy":"65"},{"ruleId":"57","severity":1,"message":"66","line":3,"column":56,"nodeType":"59","messageId":"60","endLine":3,"endColumn":66},{"ruleId":"57","severity":1,"message":"67","line":3,"column":67,"nodeType":"59","messageId":"60","endLine":3,"endColumn":73},{"ruleId":"57","severity":1,"message":"63","line":3,"column":75,"nodeType":"59","messageId":"60","endLine":3,"endColumn":87},{"ruleId":"57","severity":1,"message":"68","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":18},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'CountUp' is defined but never used.","'Bar' is defined but never used.","'CircleMarker' is defined but never used.",["69"],["70"],"'LeafletMap' is defined but never used.","'Circle' is defined but never used.","'leafShadow' is defined but never used.","no-global-assign","no-unsafe-negation"]